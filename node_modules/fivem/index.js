const axios = require('axios');

class Server {
	constructor(ip) {
		if (!ip) throw 'Please provide an IP when using the FiveM class!';
		this.ip = ip;
	}

	getPlayers() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/players.json`)
				.then(function(body) {
					let players = body.data;
					send(players.length);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

	getServerStatus() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let status = body.data.onesync_enabled;
					if (!status) {
						send(true)
					} else send(false)
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

	getCurrentPlayers() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/players.json`)
				.then(function(body) {
					let curplayers = body.data
					send(curplayers)
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

	getResources() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let resources = body.data.resources;
					send(resources);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

    getOnesync() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let onesync = body.data.vars.onesync_enabled;
					send(onesync);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

    getMaxPlayers() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let maxClients = body.data.vars.sv_maxClients;
					send(maxClients);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

	getLocale() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let locale = body.data.vars.locale;
					send(locale);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

    getGamename() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let gamename = body.data.vars.gamename;
					send(gamename);
				})
				.catch(function(error) {
					err(error);
				});
		});
    }

    getEnhancedHostSupport() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let enhancedHostSupport = body.data.vars.sv_enhancedHostSupport;
					send(enhancedHostSupport);
				})
				.catch(function(error) {
					err(error);
				});
		});
    }

    getlicenseKeyToken() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let licenseKeyToken = body.data.vars.sv_licenseKeyToken;
					send(licenseKeyToken);
				})
				.catch(function(error) {
					err(error);
				});
		});
    }

    getScriptHookAllowed() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let scriptHookAllowed = body.data.vars.sv_scriptHookAllowed;
					send(scriptHookAllowed);
				})
				.catch(function(error) {
					err(error);
				});
		});
    }

	getTags() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let tags = body.data.vars.tags;
					send(tags);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}

	getServer() {
		return new Promise((send, err) => {
			axios
				.get(`http://${this.ip}/info.json`)
				.then(function(body) {
					let server = body.data.server;
					send(server);
				})
				.catch(function(error) {
					err(error);
				});
		});
	}
}

module.exports.Server = Server;